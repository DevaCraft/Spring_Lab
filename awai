WITH account_filters (account_id, charged_off_date) AS (
    VALUES
        ('11111111-1111-1111-1111-111111111111'::uuid, NULL::date),
        ('11111111-1111-1111-1111-111111111111'::uuid, '2024-06-11'::date)
),

-- Last purchase (regardless of charged_off)
last_purchase AS (
    SELECT DISTINCT ON (account_id)
        account_id,
        transaction_date AS last_purchase_date,
        (financialdata ->> 'transactionAmount')::numeric AS last_purchase_amount
    FROM transactions
    WHERE transaction_type_code = 'Purchase'
    ORDER BY account_id, created_at DESC
)

SELECT
    af.account_id,
    lp.last_purchase_amount,
    lp.last_purchase_date,

    -- Conditional pre-charged-off latest payment
    CASE 
        WHEN af.charged_off_date IS NOT NULL THEN (
            SELECT (t.financialdata ->> 'transactionAmount')::numeric
            FROM transactions t
            WHERE t.account_id = af.account_id
              AND t.transaction_type_code = 'Payment'
              AND t.transaction_date < af.charged_off_date
            ORDER BY t.transaction_date DESC, t.created_at DESC
            LIMIT 1
        )
        ELSE NULL
    END AS pre_charged_off_payment_amount,

    CASE 
        WHEN af.charged_off_date IS NOT NULL THEN (
            SELECT t.transaction_date
            FROM transactions t
            WHERE t.account_id = af.account_id
              AND t.transaction_type_code = 'Payment'
              AND t.transaction_date < af.charged_off_date
            ORDER BY t.transaction_date DESC, t.created_at DESC
            LIMIT 1
        )
        ELSE NULL
    END AS pre_charged_off_payment_date,

    -- Conditional total post-charged-off calculations
    CASE 
        WHEN af.charged_off_date IS NOT NULL THEN (
            SELECT COALESCE(SUM((t.financialdata ->> 'transactionAmount')::numeric), 0)
            FROM transactions t
            WHERE t.account_id = af.account_id
              AND t.transaction_type_code = 'Fee'
              AND t.transaction_date >= af.charged_off_date
        )
        ELSE NULL
    END AS total_fee,

    CASE 
        WHEN af.charged_off_date IS NOT NULL THEN (
            SELECT COALESCE(SUM((t.financialdata ->> 'transactionAmount')::numeric), 0)
            FROM transactions t
            WHERE t.account_id = af.account_id
              AND t.transaction_type_code = 'Payment'
              AND t.transaction_date >= af.charged_off_date
        )
        ELSE NULL
    END AS total_payment,

    CASE 
        WHEN af.charged_off_date IS NOT NULL THEN (
            SELECT COALESCE(SUM((t.financialdata ->> 'transactionAmount')::numeric), 0)
            FROM transactions t
            WHERE t.account_id = af.account_id
              AND t.transaction_type_code = 'Purchase'
              AND t.transaction_date >= af.charged_off_date
        )
        ELSE NULL
    END AS total_merchant_charges

FROM account_filters af
LEFT JOIN last_purchase lp ON af.account_id = lp.account_id;
